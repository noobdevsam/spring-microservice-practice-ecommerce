services:
    ms-db-mysql-product:
        container_name: ms-db-mysql-product
        image: mysql:latest
        environment:
            MYSQL_ROOT_PASSWORD: password
            MYSQL_DATABASE: productdb
            MYSQL_USER: productadmin
            MYSQL_PASSWORD: password
        volumes:
            - mysql-data-product:/var/lib/mysql
        ports:
            - "3306:3306"
        networks:
            - microservices-net
        restart: unless-stopped
    
    ms-db-mysql-order:
        container_name: ms-db-mysql-order
        image: mysql:latest
        environment:
            MYSQL_ROOT_PASSWORD: password
            MYSQL_DATABASE: orderdb
            MYSQL_USER: orderadmin
            MYSQL_PASSWORD: password
        volumes:
            - mysql-data-order:/var/lib/mysql
        ports:
            - "3307:3306"
        networks:
            - microservices-net
        restart: unless-stopped
    
    ms-db-mongodb:
        container_name: ms-db-mongodb
        image: mongo:latest
        volumes:
            - mongo-data:/data/db
        ports:
            - "27017:27017"
        networks:
            - microservices-net
        restart: unless-stopped
    
    #    mail-dev:
    #        container_name: ms-mail-dev
    #        image: maildev/maildev:latest
    #        ports:
    #            - "1080:1080"
    #            - "1025:1025"
    
    ms-zookeeper:
        container_name: ms-zookeeper
        image: bitnami/zookeeper:latest
        ports:
            - "22181:2181"
        environment:
            ZOO_PORT_NUMBER: 2181
            ZOO_TICK_TIME: 2000
            ZOO_SERVER_ID: 1
            ALLOW_ANONYMOUS_LOGIN: yes
        volumes:
            - zookeeper-data:/bitnami/zookeeper/data
            - zookeeper-conf:/opt/bitnami/zookeeper/conf
        networks:
            - microservices-net
    
    ms-kafka:
        container_name: ms-kafka
        image: bitnami/kafka:latest
        ports:
            - "9092:9092"
        depends_on:
            - ms-zookeeper
        volumes:
            - kafka-data:/bitnami/kafka/data
            - kafka-conf:/opt/bitnami/kafka/conf
        environment:
            KAFKA_CFG_ZOOKEEPER_CONNECT: ms-zookeeper:2181
            KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
            KAFKA_CFG_LISTENERS: PLAINTEXT://ms-kafka:9092, CONTROLLER://ms-kafka:9093
            KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://ms-kafka:9092, CONTROLLER://ms-kafka:9093
            KAFKA_CFG_PROCESS_ROLES: broker,controller
            KAFKA_CFG_NODE_ID: 0
            KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@ms-kafka:9093
            KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
        networks:
            - microservices-net
    
    # only zipkin server left to be added

networks:
    microservices-net:
        driver: bridge
volumes:
    zookeeper-data:
    zookeeper-conf:
    kafka-data:
    kafka-conf:
    mysql-data-product:
    mysql-data-order:
    mongo-data:
    maildev-data: